#!/bin/bash
# Enhanced help system for terminal environment

# Source shell functions if available
if [[ -f "$HOME/.local/lib/shell_functions.sh" ]]; then
  source "$HOME/.local/lib/shell_functions.sh"
fi

# Define colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Function to print section header
print_header() {
  echo -e "${BLUE}${BOLD}$1${NC}"
  echo -e "${BLUE}${BOLD}$(printf '=%.0s' $(seq 1 ${#1}))${NC}"
}

# Function to print command group
print_command_group() {
  local category="$1"
  local title="$2"
  
  # Make first character uppercase
  title=$(echo "$title" | awk '{print toupper(substr($0,1,1)) substr($0,2)}')
  
  echo -e "\n${YELLOW}${BOLD}$title Commands:${NC}"
  
  if [[ -f "$HOME/.local/lib/help/index.txt" ]]; then
    grep "|$category|" "$HOME/.local/lib/help/index.txt" | sort | while IFS='|' read -r cmd cat desc; do
      printf "  ${GREEN}%-15s${NC} %s\n" "$cmd" "$desc"
    done
  else
    echo -e "${RED}Help index not found.${NC}"
  fi
}

# If no arguments, display the main help menu
if [ $# -eq 0 ]; then
  echo -e "${BOLD}${MAGENTA}"
  echo "  _    _      _                          "
  echo " | |  | |    | |                         "
  echo " | |__| | ___| |_ __   ___ ___ _ __ ___  "
  echo " |  __  |/ _ \ | '_ \ / __/ _ \ '_ \` _ \ "
  echo " | |  | |  __/ | |_) | (_|  __/ | | | | |"
  echo " |_|  |_|\___|_| .__/ \___\___|_| |_| |_|"
  echo "               | |                       "
  echo "               |_|                       "
  echo -e "${NC}"
  
  echo -e "${BOLD}Welcome to the Enhanced Terminal Help System${NC}"
  echo
  
  print_header "USAGE"
  echo "  help                    Display this help menu"
  echo "  help <command>          Get help for a specific command"
  echo "  help <category>         Get help for a command category"
  echo "  help examples           Show command examples"
  echo "  help tutorial           Display a basic terminal tutorial"
  echo "  help shortcuts          Show keyboard shortcuts"
  echo
  
  print_header "COMMAND CATEGORIES"
  echo -e "  ${YELLOW}basics${NC}    - Basic file and directory operations"
  echo -e "  ${YELLOW}system${NC}    - System information and management"
  echo -e "  ${YELLOW}network${NC}   - Network utilities and connectivity"
  echo -e "  ${YELLOW}package${NC}   - Package management and installation"
  echo -e "  ${YELLOW}editors${NC}   - Text editors and file viewing"
  echo -e "  ${YELLOW}archive${NC}   - File compression and archiving"
  echo -e "  ${YELLOW}shell${NC}     - Shell utilities and scripting"
  echo -e "  ${YELLOW}tools${NC}     - Terminal tools and helpers"
  echo -e "  ${YELLOW}dev${NC}       - Development tools and languages"
  echo
  
  print_header "TOOLS & UTILITIES"
  echo -e "  ${GREEN}available-commands${NC}   List all commands available in this terminal"
  echo -e "  ${GREEN}which-wrapper${NC}        Show the location of a command"
  echo -e "  ${GREEN}system-info${NC}          Display system information"
  echo -e "  ${GREEN}man${NC}                  Display manual pages"
  echo
  
  print_header "TIPS"
  echo -e "  ${CYAN}•${NC} Use Tab for command completion"
  echo -e "  ${CYAN}•${NC} Press Ctrl+C to cancel a running command"
  echo -e "  ${CYAN}•${NC} Use 'history' to see previous commands"
  echo -e "  ${CYAN}•${NC} Add '&' to the end of a command to run it in the background"
  echo
  
  print_header "GETTING STARTED"
  echo -e "Try these commands to get familiar with the terminal:"
  echo -e "  ${GREEN}ls${NC}                   List files in the current directory"
  echo -e "  ${GREEN}pwd${NC}                  Show your current directory"
  echo -e "  ${GREEN}mkdir test${NC}           Create a new directory called 'test'"
  echo -e "  ${GREEN}cd test${NC}              Change to the 'test' directory"
  echo -e "  ${GREEN}echo 'Hello' > file.txt${NC}  Create a file with some text"
  echo -e "  ${GREEN}cat file.txt${NC}         Display the contents of the file"
  
  exit 0
fi

# Handle specific help requests
case "$1" in
  basics)
    print_header "BASIC COMMANDS"
    print_command_group "basics" "Basic"
    ;;
    
  system)
    print_header "SYSTEM COMMANDS"
    print_command_group "system" "System"
    ;;
    
  network)
    print_header "NETWORK COMMANDS"
    print_command_group "network" "Network"
    ;;
    
  package)
    print_header "PACKAGE MANAGEMENT"
    print_command_group "package" "Package"
    ;;
    
  editors)
    print_header "TEXT EDITORS"
    print_command_group "editors" "Editor"
    ;;
    
  archive)
    print_header "FILE ARCHIVING & COMPRESSION"
    print_command_group "archive" "Archive"
    ;;
    
  shell)
    print_header "SHELL UTILITIES"
    print_command_group "shell" "Shell"
    ;;
    
  tools)
    print_header "TERMINAL TOOLS"
    print_command_group "tools" "Tool"
    ;;
    
  dev)
    print_header "DEVELOPMENT TOOLS"
    print_command_group "dev" "Development"
    ;;
    
  examples)
    print_header "COMMAND EXAMPLES"
    
    echo -e "\n${YELLOW}${BOLD}File Operations:${NC}"
    echo -e "  ${GREEN}ls -la${NC}                  List all files with details"
    echo -e "  ${GREEN}cp file.txt backup/${NC}     Copy a file to another directory"
    echo -e "  ${GREEN}mv old.txt new.txt${NC}      Rename a file"
    echo -e "  ${GREEN}rm unwanted.txt${NC}         Delete a file"
    echo -e "  ${GREEN}mkdir -p dir1/dir2${NC}      Create nested directories"
    echo -e "  ${GREEN}find . -name \"*.txt\"${NC}    Find all text files"
    
    echo -e "\n${YELLOW}${BOLD}Text Processing:${NC}"
    echo -e "  ${GREEN}grep \"search\" file.txt${NC}  Search for text in a file"
    echo -e "  ${GREEN}head -n 10 file.txt${NC}     Show first 10 lines of a file"
    echo -e "  ${GREEN}tail -f log.txt${NC}         Show and follow end of a file"
    echo -e "  ${GREEN}sort names.txt${NC}          Sort lines of a file"
    echo -e "  ${GREEN}wc -l file.txt${NC}          Count lines in a file"
    
    echo -e "\n${YELLOW}${BOLD}System Commands:${NC}"
    echo -e "  ${GREEN}ps aux${NC}                  List all running processes"
    echo -e "  ${GREEN}df -h${NC}                   Show disk usage"
    echo -e "  ${GREEN}free -h${NC}                 Show memory usage"
    echo -e "  ${GREEN}uname -a${NC}                Show system information"
    
    echo -e "\n${YELLOW}${BOLD}Network Commands:${NC}"
    echo -e "  ${GREEN}ping google.com${NC}         Check network connectivity"
    echo -e "  ${GREEN}curl -O https://url${NC}     Download a file"
    echo -e "  ${GREEN}wget https://url${NC}        Download a file"
    echo -e "  ${GREEN}ifconfig${NC}                Show network interfaces"
    
    echo -e "\n${YELLOW}${BOLD}Package Management:${NC}"
    echo -e "  ${GREEN}pkg update${NC}              Update package lists"
    echo -e "  ${GREEN}pkg install python${NC}      Install a package"
    echo -e "  ${GREEN}pkg search gcc${NC}          Search for a package"
    echo -e "  ${GREEN}pkg list-installed${NC}      List installed packages"
    ;;
    
  shortcuts)
    print_header "KEYBOARD SHORTCUTS"
    
    echo -e "\n${YELLOW}${BOLD}Terminal Navigation:${NC}"
    echo -e "  ${GREEN}Ctrl+A${NC}       Move cursor to beginning of line"
    echo -e "  ${GREEN}Ctrl+E${NC}       Move cursor to end of line"
    echo -e "  ${GREEN}Ctrl+Left${NC}    Move cursor one word backward"
    echo -e "  ${GREEN}Ctrl+Right${NC}   Move cursor one word forward"
    echo -e "  ${GREEN}Tab${NC}          Auto-complete command or filename"
    
    echo -e "\n${YELLOW}${BOLD}Command History:${NC}"
    echo -e "  ${GREEN}Up/Down${NC}      Browse through command history"
    echo -e "  ${GREEN}Ctrl+R${NC}       Search command history"
    echo -e "  ${GREEN}!!${NC}           Repeat last command"
    echo -e "  ${GREEN}!n${NC}           Repeat command number n"
    
    echo -e "\n${YELLOW}${BOLD}Process Control:${NC}"
    echo -e "  ${GREEN}Ctrl+C${NC}       Interrupt (kill) current process"
    echo -e "  ${GREEN}Ctrl+Z${NC}       Suspend current process"
    echo -e "  ${GREEN}Ctrl+D${NC}       End of file (exit current shell)"
    
    echo -e "\n${YELLOW}${BOLD}Screen Control:${NC}"
    echo -e "  ${GREEN}Ctrl+L${NC}       Clear the screen"
    echo -e "  ${GREEN}Ctrl+S${NC}       Stop screen output"
    echo -e "  ${GREEN}Ctrl+Q${NC}       Resume screen output"
    ;;
    
  tu^
[0-9]+$ ]]; then
        echo -e "${RED}Error: Invalid number of lines${NC}"
        echo "Usage: history -n NUM"
        exit 1
      fi
      # Show last N lines
      history "$2"
      exit 0
      ;;
    *)
      # Default behavior
      history "$@"
      exit 0
      ;;
  esac
else
  # If no system history command, simulate one using .bash_history
  if [ -f "$HOME/.bash_history" ]; then
    case "$1" in
      -c|--clear)
        # Clear history
        > "$HOME/.bash_history"
        echo -e "${GREEN}Command history cleared.${NC}"
        exit 0
        ;;
      -h|--help)
        echo -e "${BLUE}Simulated history command${NC}"
        echo
        echo "Usage: history [OPTION]"
        echo
        echo "Options:"
        echo "  -c, --clear    Clear the history list"
        echo "  -h, --help     Display this help and exit"
        echo "  -s, --search   Search history for a pattern"
        echo "  -n NUM         Show only the last NUM lines"
        echo
        echo "Examples:"
        echo "  history        Show command history"
        echo "  history -c     Clear history"
        echo "  history -s ls  Search for 'ls' in history"
        echo "  history -n 10  Show last 10 commands"
        exit 0
        ;;
      -s|--search)
        if [ -z "$2" ]; then
          echo -e "${RED}Error: No search pattern specified${NC}"
          echo "Usage: history -s PATTERN"
          exit 1
        fi
        # Search history
        grep -i "$2" "$HOME/.bash_history" | cat -n
        exit 0
        ;;
      -n)
        if [ -z "$2" ] || ! [[ "$2" =~ 
^
[0-9]+$ ]]; then
          echo -e "${RED}Error: Invalid number of lines${NC}"
          echo "Usage: history -n NUM"
          exit 1
        fi
        # Show last N lines
        tail -n "$2" "$HOME/.bash_history" | cat -n
        exit 0
        ;;
      *)
        # Default behavior - show all history with line numbers
        cat -n "$HOME/.bash_history"
        exit 0
        ;;
    esac
  else
    echo -e "${RED}No command history available.${NC}"
    echo "Command history will be accumulated as you use the terminal."
    exit 1
  fi
fi
