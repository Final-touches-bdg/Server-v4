#!/bin/bash
# Enhanced bash configuration for a more complete Linux terminal experience

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Source the shell functions library
if [[ -f "$HOME/.local/lib/shell_functions.sh" ]]; then
  source "$HOME/.local/lib/shell_functions.sh"
fi

# ------------------------------
# ENVIRONMENT VARIABLES
# ------------------------------
export HISTSIZE=5000
export HISTFILESIZE=10000
export HISTCONTROL=ignoreboth:erasedups
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export EDITOR=nano
export VISUAL=nano
export PAGER=less
export LESS="-R"
export TERM=xterm-256color

# Add local bin to PATH
add_to_path "$HOME/.local/bin"
add_to_path "$HOME/bin"
add_to_path "$HOME/.enhanced/bin"

# Python settings
export PYTHONDONTWRITEBYTECODE=1
export PYTHONUNBUFFERED=1
export PYTHONIOENCODING=utf-8
export PYTHONUTF8=1

# ------------------------------
# SHELL OPTIONS
# ------------------------------
# Enable options
shopt -s checkwinsize
shopt -s histappend
shopt -s cmdhist
shopt -s globstar 2>/dev/null # Pattern ** for recursive matches
shopt -s autocd 2>/dev/null   # Change to named directory
shopt -s dirspell 2>/dev/null # Correct minor spelling errors in cd
shopt -s cdspell 2>/dev/null  # Correct minor spelling errors in cd

# ------------------------------
# ALIASES
# ------------------------------
# Basic file operations
alias ls='ls --color=auto'
alias ll='ls -lah'
alias la='ls -A'
alias l='ls -CF'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias mkdir='mkdir -p'
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias cls='clear'
alias df='df -h'
alias du='du -h'
alias free='free -h'
alias h='history'

# Git aliases
alias gs='git status'
alias ga='git add'
alias gc='git commit -m'
alias gp='git push'
alias gl='git pull'
alias gd='git diff'
alias gb='git branch'
alias gco='git checkout'
alias glog='git log --oneline --graph --decorate'

# Python aliases
alias py='python3'
alias py2='python2'
alias pip='pip3'
alias venv='python3 -m venv venv && source venv/bin/activate'
alias activate='source venv/bin/activate'
alias pipup='pip install --upgrade pip'
alias pipi='pip install'
alias pipu='pip uninstall'
alias piplist='pip list'

# Network aliases
alias myip='curl -s https://api.ipify.org'
alias localip='hostname -I'
alias netstat='netstat -tunlp'
alias ports='netstat -tunlp'
alias pingtest='ping -c 5 google.com'
alias tracert='traceroute'

# System aliases
alias meminfo='free -h'
alias cpuinfo='lscpu'
alias diskinfo='df -h'
alias sysinfo='uname -a && echo && lscpu && echo && free -h && echo && df -h'
alias pss='ps aux | grep'
alias path='echo -e "${PATH//:/\\n}"'

# Package management
alias update='pkg update'
alias upgrade='pkg upgrade'
alias install='pkg install'
alias remove='pkg remove'
alias search='pkg search'
alias list='pkg list-installed'

# Help
alias halp='echo -e "Enhanced Terminal Help:\n- Type \"commands\" to see available commands\n- Type \"aliases\" to see available aliases\n- Type \"sysinfo\" to see system information\n- Type \"update\" to update packages\n- Type \"help\" for more detailed help"'

# ------------------------------
# FUNCTIONS
# ------------------------------
# Extract various archive formats
extract() {
  if [ -f "$1" ]; then
    case "$1" in
      *.tar.bz2)   tar xjf "$1"    ;;
      *.tar.gz)    tar xzf "$1"    ;;
      *.tar.xz)    tar xJf "$1"    ;;
      *.bz2)       bunzip2 "$1"    ;;
      *.rar)       unrar x "$1"    ;;
      *.gz)        gunzip "$1"     ;;
      *.tar)       tar xf "$1"     ;;
      *.tbz2)      tar xjf "$1"    ;;
      *.tgz)       tar xzf "$1"    ;;
      *.zip)       unzip "$1"      ;;
      *.Z)         uncompress "$1" ;;
      *.7z)        7z x "$1"       ;;
      *)           echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Create and cd into directory
mkcd() {
  mkdir -p "$1" && cd "$1"
}

# Find text in files
ftext() {
  grep -r "$1" .
}

# Show all defined aliases
aliases() {
  alias | grep -v "alias aliases" | sort
}

# Show commonly used commands
commands() {
  echo -e "${BLUE}File Operations:${NC} ls, cd, cp, mv, rm, mkdir, touch, cat, less, head, tail"
  echo -e "${BLUE}Text Processing:${NC} grep, sed, awk, cut, sort, uniq, wc, tr"
  echo -e "${BLUE}File Archives:${NC} tar, zip, unzip, gzip, extract()"
  echo -e "${BLUE}System Info:${NC} ps, top, free, df, du, uname, lscpu, sysinfo"
  echo -e "${BLUE}Network:${NC} ping, curl, wget, netstat, ssh, myip, localip"
  echo -e "${BLUE}Package Management:${NC} pkg install/remove/update/search"
  echo -e "${BLUE}Development:${NC} python, pip, git, gcc, make"
  echo -e "${BLUE}Utilities:${NC} find, xargs, echo, date, cal, bc"
}

# Show detailed help
help() {
  echo -e "${GREEN}Enhanced Terminal Environment Help${NC}"
  echo 
  echo -e "${YELLOW}Command Categories:${NC}"
  echo -e "  ${BLUE}Type 'commands' to see available commands${NC}"
  echo -e "  ${BLUE}Type 'aliases' to see available shortcuts${NC}"
  echo
  echo -e "${YELLOW}Useful Functions:${NC}"
  echo -e "  ${BLUE}extract <file>${NC} - Extract various archive formats"
  echo -e "  ${BLUE}mkcd <dir>${NC} - Create and change to directory"
  echo -e "  ${BLUE}ftext <pattern>${NC} - Find text in files"
  echo 
  echo -e "${YELLOW}System Information:${NC}"
  echo -e "  ${BLUE}sysinfo${NC} - Show system information"
  echo -e "  ${BLUE}meminfo${NC} - Show memory usage"
  echo -e "  ${BLUE}cpuinfo${NC} - Show CPU information"
  echo -e "  ${BLUE}diskinfo${NC} - Show disk usage"
  echo
  echo -e "${YELLOW}Package Management:${NC}"
  echo -e "  ${BLUE}update${NC} - Update package lists"
  echo -e "  ${BLUE}upgrade${NC} - Upgrade installed packages"
  echo -e "  ${BLUE}install <pkg>${NC} - Install package"
  echo -e "  ${BLUE}remove <pkg>${NC} - Remove package" 
  echo -e "  ${BLUE}search <pattern>${NC} - Search for package"
  echo -e "  ${BLUE}list${NC} - List installed packages"
}

# ------------------------------
# PROMPT CUSTOMIZATION
# ------------------------------
# Set a nice colorful prompt
if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
  PS1='\[\033[01;32m\]\u@terminal\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
  PS1='\u@terminal:\w\$ '
fi

# Display welcome message
echo -e "${GREEN}Enhanced Terminal Environment${NC} - Type ${YELLOW}help${NC} for assistance"

# Load additional custom configuration if exists
if [ -f "$HOME/.bashrc.local" ]; then
  source "$HOME/.bashrc.local"
fi
